## -*-ruby-*-
## Nadoka Sample resource file
## $Id: nadokarc,v 1.24 2004/05/01 05:05:06 ko1 Exp $
#
# Copyright (c) 2004 SASADA Koichi <ko1 at atdot.net>
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's lisence.
#
#

class NADOKA_Config < Nadoka::NDK_ConfigBase

###############################################
# System setting
Setting_name = 'IRCNet'

# 0: quiet
# 1: ch log only
# 2: normal
# 3: debug
Loglevel = 2


###############################################
# client server setting
Client_server_port = 6667
Client_server_host = nil # You can specify binding host(interface)
Client_server_pass = 'NadokaPassWord'
Client_server_acl  = nil

#
# ACL(Access Control List) example:
# Client_server_acl = %q{  # ACL must be string
#   deny all
#   allow 192.168.1.1
#   allow 192.168.2.0/24
# }
#
# or you can set acl directly like follows:
#
# ACL_Object = ::ACL.new(...)
#



###############################################
# server setting

# IRCnet servers from
#   http://irc.kyoto-u.ac.jp/list-of-servers.html
Servers = [
  { :host => 'irc.fujisawa.wide.ad.jp',  # default: 6667
    :port => (6660 .. 6669),             # default: nil
    :pass => nil,
  },
  { :host => 'irc.tokyo.wide.ad.jp',
    :port => (6660 .. 6669),
  },
  { :host => 'irc.media.kyoto-u.ac.jp',
    :port => (6660 .. 6669),
  },
  { :host => 'irc.nara.wide.ac.jp',
    :port => (6660 .. 6669),
  },
  { :host => 'irc.huie.hokudai.ac.jp',
    # without :port, use 6667 as default port
  },

  # IPv6 Sample
  # { :host => irc6.nara.wide.ad.jp,
  #   :port => 6667
  # }
]

###############################################
# userinfo
User     = ENV['USER'] || ENV['USERNAME'] || 'nadokatest'
Nick     = ENV['USER'] || ENV['USERNAME'] || 'ndk_nick'
Hostname = Socket.gethostname
Realname = 'test bot on nadoka'

Away_Message = 'away'

# If this item is String, your nick will
# be that when no clients are connected.
Away_Nick    = nil

Quit_Message = 'bye! / quit nadoka'


###############################################
# channel info

# log filename foramt
#  ${setting_name} : Setting name
#  ${channel_name} : Channel name
#  %? : Time#strftime format(see ruby reference)
#
Default_log = '${setting_name}-${channel_name}-%y%m%d.log'
System_log  = '${setting_name}-system.log'

Channel_info = {
  '#nadoka' => {
    # timing
    #  :startup / when nadoka start up
    #  :login   / when user login(default)
    :timing  => :startup,
    :log     => '${setting_name}-nadoka-chan-%y%m%d.log',
    # :part_message => "bye bye"
  },
}

Backlog_Lines = 20
Log_TimeFormat= '%y/%m/%d-%H:%M:%S'

###############################################
# Directory
Log_dir     = './log'

Plugins_dir = './plugins'
# You can set Plugins_dir as Enumerable object.
# ex: ['./dir1', './dir2', ...]


###############################################
# Bots
BotFiles = [
  # File names of bot description file to load under Plugins_dir
  #
  # 'samplebot',
  # 'opshop',
  # 'sixamo',
  #
  # If this value is false value(BotFiles = false), bot files are auto
  # loaded with BotConfig(ex: :BotName1 is listed, load botname1)
  #
]

BotConfig = {
  # # make a BotName1 instance with configuration
  # :BotName1 => {
  #   :set_x => x,
  #   :set_y => y,
  #   ...
  # },
  #
  # # If config is Array, make two BotName2 instance with each config
  # :BotName2 =>
  #   [
  #     {config1},
  #     {config2},
  #   ],
  #
  # # If no config, loaded bot class (ex: BotName3) is instantiate with no config
  #
}


###############################################
# Misc

Privmsg_Filter = nil
Notice_Filter  = nil

end

